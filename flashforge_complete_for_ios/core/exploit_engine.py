"""Orchestrate chipsetâ€‘specific exploits for different stages."""

from exploits.samsung_exynos import SamsungExynosExploit
from exploits.qualcomm_edl import QualcommEDLExploit
from exploits.mtk_brom import MTKBromExploit
from exploits.kirin_exploit import KirinExploit
from utils.logger import Logger


class ExploitEngine:
    def __init__(self) -> None:
        self.logger = Logger("ExploitEngine")
        self.exploits = {
            "Qualcomm": QualcommEDLExploit(),
            "MediaTek": MTKBromExploit(),
            "Exynos": SamsungExynosExploit(),
            "Kirin": KirinExploit(),
        }

    def run_exploit(self, chipset: str, device: str, stage: str) -> bool:
        exploit = self.exploits.get(chipset)
        if not exploit:
            self.logger.error(f"No exploit for chipset {chipset}")
            return False
        try:
            self.logger.info(f"Running {chipset} exploit stage {stage}")
            return exploit.execute(device, stage)
        except Exception as e:
            self.logger.error(f"Exploit failed: {e}")
            return False